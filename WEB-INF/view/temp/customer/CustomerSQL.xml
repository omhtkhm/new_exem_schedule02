<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="customer">
	<typeAlias alias="customerBean" 
			   type="com.exem9.lms.web.customer.bean.CustomerBean"/> 
	<typeAlias alias="supoBean" 
			   type="com.exem9.lms.web.common.bean.SupoBean" />
	<typeAlias alias="customermemberBean" 
			   type="com.exem9.lms.web.customer.bean.CustomerMemberBean"/>  
	<typeAlias alias="customerNmBean" 
			   type="com.exem9.lms.web.customer.bean.CustomerNmBean"/>
	<typeAlias alias="customerPjtNmBean" 
			   type="com.exem9.lms.web.customer.bean.CustomerPjtNmBean"/>			   
	
    <resultMap class="customerBean" id="cusInfoMap">
		<result property="cusId" column="customer_id"/>
		<result property="cusNm" column="customer_name"/>
		<result property="proId" column="project_id"/>
		<result property="proNm" column="project_name"/>
		<result property="cususerId" column="cususer_id"/>
		<result property="cususerNm" column="cususer_name"/>
		<result property="cususerPhone" column="cususer_phone"/>
		<result property="cususerMail" column="cususer_mail"/>
		<result property="cusLoca" column="customer_location"/>
		<result property="salseId" column="salesman_id"/>		
		<result property="etc" column="etc"/>
		<result property="createUserId" column="create_user"/>
		<result property="createDate" column="create_date"/>
		<result property="lastUpUserId" column="last_update_user"/>
		<result property="lastUpDate" column="last_update_date"/>
	</resultMap>
	
	<select id="getcusinfo" parameterClass="java.util.HashMap" resultMap="cusInfoMap">
	select u.customer_id,
		   u.customer_name,
		   u.project_id,
		   u.project_name,
		   u.dbms_id,
		   u.dbms_name,
		   u.cususer_id,
		   u.cususer_name,
		   u.cususer_phone,
		   u.cususer_mail,
		   u.customer_location,
		   u.salesman_id,
		   u.etc,
		   u.create_user,
	       u.create_date,
		   u.last_update_user,
		   u.last_update_date,
		   u.row_num	
	from (select  u.customer_id,
		        u.customer_name, 
		        u.project_id,
		        u.project_name,	
		        (select dbms_id from xm_dbms xd where xd.dbms_id = xpdm.dbms_id) as dbms_id,
				(select dbms_name from xm_dbms xd where xd.dbms_id = xpdm.dbms_id) as dbms_name,
				(select cususer_id from xm_customer_member xcm where xcm.cususer_id = xpdm.cususer_id) as cususer_id,
				(select cususer_name from xm_customer_member xcm where xcm.cususer_id = xpdm.cususer_id) as cususer_name,
				(select cususer_phone from xm_customer_member xcm where xcm.cususer_id = xpdm.cususer_id) as cususer_phone,
				(select cususer_mail from xm_customer_member xcm where xcm.cususer_id = xpdm.cususer_id) as cususer_mail,
		        u.customer_location,	       
		        u.salesman_id,
		        u.etc,
		        u.create_user,
		        u.create_date,
		        u.last_update_user,
		        u.last_update_date,
		        ROW_NUMBER() OVER (ORDER BY u.customer_name asc) as row_num    
		from 
		(
		select xc.customer_id,
		       xc.customer_name, 
		       xp.project_id,
		       xp.project_name,			 
		       xc.customer_location,	       
		       xc.salesman_id,
		       xc.etc,
		       xc.create_user,
		       xc.create_date,
		       xc.last_update_user,
		       xc.last_update_date
		from xm_customer xc inner join xm_project xp		
		on xc.customer_id = xp.customer_id
		where 1 = 1		
		)u inner join xm_project_dbms_member_managed xpdm
		on u.project_id = xpdm.project_id) u
		where 1 = 1		
		<isNotEmpty property="selectTextVal">
			<!-- 검색조건이 고객사 -->
			<isEqual property="selectBtnVal" compareValue="1"> 
				and u.customer_name like '%' || #selectTextVal# || '%'
			</isEqual>
			 <!-- 검색조건이 담당엔지니어 -->
			<!-- <isEqual property="selectBtnVal" compareValue="2">
				and (user1_name like '%' || #selectTextVal# || '%'
				     or user2_name like '%' || #selectTextVal# || '%')
			</isEqual> -->
			 <!-- 검색조건이 영업대표-->
			<isEqual property="selectBtnVal" compareValue="2">
				and u.salesman_id in (select user_id from xm_member where user_name like '%' || #selectTextVal# || '%')
			</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="pageNo">
		and u.row_num BETWEEN #startNo# AND #endNo# 
		</isNotEmpty>
		<isEmpty property="pageNo">
		and u.row_num BETWEEN 1 AND #viewCount#
		</isEmpty>
		order by u.customer_name, u.project_name asc
	</select> 

<!--  	<select id="getsupoinfo" resultClass="SupoBean">
	select support_level_id as supoId,
       	   support_level_name as supoNm 
	from xm_support_level  	
	</select>  -->
	
	<select id="getNCount" parameterClass="java.util.HashMap" resultClass="Integer">
	select count(customer_id)
		from 
		(select customer_id<!-- ,
		       customer_name, 
		       (select department_name from xm_department xd where xd.department_id = xc.department_id) as department_id,
		       (select team_name from xm_team xt where xt.team_id = xc.team_id) as team_id,
		       (select dbms_name from xm_dbms xd where xd.dbms_id = xc.dbms_id) as dbms_id,
		       user1_name,
		       user2_name,   
		       user1_phone,  
		       user2_phone,
		       user1_mail,
		       user2_mail,
		       salesman_name,  
		       salesman_phone,
		       salesman_mail,  
		       (select support_level_name from xm_support_level xsl where xsl.support_level_id = xc.support_state_id) as support_state_id,
		       support_visit_freq,
		       support_start_date,
		       support_end_date,
		       customer_location,
		       customer1_name,
		       customer1_phone,
		       customer2_phone,
		       customer1_mail,
		       customer2_mail,
		       etc,
		       create_user,
		       create_date,
		       last_update_user,
		       last_update_date,
		       ROW_NUMBER() OVER (ORDER BY customer_name asc) as row_num   -->  
		from xm_customer xc
		where 1 = 1
		<!-- <isNotEmpty property="supoState">
		and support_state_id  = #supoState#
		</isNotEmpty>
		<isNotEmpty property="userDept">
		and department_id  = #userDept#
		</isNotEmpty>
		<isNotEmpty property="userDbms">
		and dbms_id  = #userDbms#
		</isNotEmpty> -->		
		<isNotEmpty property="selectTextVal">
			<!-- 검색조건이 고객사 -->
			<isEqual property="selectBtnVal" compareValue="1"> 
				and customer_name like '%' || #selectTextVal# || '%'
			</isEqual>
			 <!-- 검색조건이 담당엔지니어 -->
			<isEqual property="selectBtnVal" compareValue="2">
				and (user1_name like '%' || #selectTextVal# || '%'
				     or user2_name like '%' || #selectTextVal# || '%')
			</isEqual>
			 <!-- 검색조건이 영업대표-->
			<isEqual property="selectBtnVal" compareValue="3">
				and salesman_id in (select user_id from xm_member where user_name like '%' || #selectTextVal# || '%')
			</isEqual>
		</isNotEmpty>
		)u<!-- 
		<isNotEmpty property="pageNo">
		WHERE u.row_num BETWEEN #startNo# AND #endNo# 
		</isNotEmpty>
		<isEmpty property="pageNo">
		WHERE u.row_num BETWEEN 1 AND #viewCount#
		</isEmpty> -->
	</select>
	
	
	<update id="updateCusInfo" parameterClass="java.util.HashMap">
	UPDATE XM_CUSTOMER 
	SET customer1_name = (select cususer_name from xm_customer_member where cususer_id = #cususer#),
	    customer_location = #cuslocation#,
	    salesman_id =  #salseman#,	 
	    ETC = #etc#, 
	    LAST_UPDATE_USER = #userId#,
	    LAST_UPDATE_DATE = current_date::date
	WHERE PROJECT_ID = #cusproId#
	</update>
	
	<select id="getcusNminfo" resultClass="customerBean">
	SELECT distinct  customer_name as cusNm	  
	from xm_customer	
	group by customer_id, customer_name
	order by customer_name asc
	</select>
	
	<select id="getcusNmProinfo" parameterClass="java.util.HashMap" resultClass="customerBean">
	select xp.project_id as proId,
       xp.project_name as proNm,
       xc.customer_id as cusId,
       xc.customer_location as cusLoca,
       xc.salesman_id as salseId   
	from xm_customer xc inner join xm_project xp
	on xc.customer_id = xp.customer_id
	where xc.customer_name  = #cusNm#
	<isNotEmpty property="cusProNm">
	and xp.project_name = #cusProNm#
	</isNotEmpty>
	<!-- group by project_id, project_name, customer_id -->
	order by xp.project_name asc
	</select>
	
	<select id="getcusNmUserinfo" parameterClass="java.util.HashMap" resultClass="customermemberBean">
	select distinct xcm.cususer_id as cususerId,
		   xcm.cususer_name as cususerNm	       
	from xm_customer_member xcm, xm_customer xc
	where xcm.customer_id = xc.customer_id
	and xc.customer_name =  #cusNm#
	</select>
	
	<select id="getcusUserinfo" parameterClass="java.util.HashMap" resultClass="customermemberBean">
	select xp.customer_id as cusId,
	       xpdm.project_id as proId,
	       xpdm.dbms_id as dbmsId,
	       xcm.cususer_id as cususerId, 
	       xcm.cususer_name as cususerNm,
	       xcm.cususer_phone as cususerPhone,
	       xcm.cususer_mail as cususerMail
	from xm_project_dbms_member_managed xpdm inner join xm_project xp
	on xpdm.project_id = xp.project_id
	inner join xm_customer_member xcm
	on xpdm.cususer_id = xcm.cususer_id
	where 1 = 1
	<isNotEmpty property="cusUser">
	and xcm..cususer_name = #cusUser#
	</isNotEmpty>
	<isNotEmpty property="cusId">
	and xp.customer_id = #cusId#
	</isNotEmpty>
	<isNotEmpty property="cusUserId">
	and xcm.cususer_id = #cusUserId#
	</isNotEmpty>		
	</select>	
	
	
	<select id="getprodbmsManagedinfo" parameterClass="java.util.HashMap" resultClass="customermemberBean">
	select a.cususer_id as cususerId,
	       xcm.cususer_name as cususerNm,
	       xcm.cususer_phone as cususerPhone,
	       xcm.cususer_mail as  cususerMail
	from (select a.customer_id,
		       a.project_id,
		       xpdm.dbms_id,
		       xpdm.cususer_id	        
		from (select xp.project_id,
			     xp.customer_id
		from xm_customer xc join xm_project xp
		on xc.customer_id = xp.customer_id
		where xc.customer_name = #cusNm#) a join xm_project_dbms_member_managed xpdm
		on a.project_id = xpdm.project_id ) a join xm_customer_member xcm 
	on a.cususer_id = xcm.cususer_id	
	group by a.cususer_id, xcm.cususer_name, xcm.cususer_phone, xcm.cususer_mail  
<!-- 	select distinct xcm.cususer_id as cususerId,
		   xcm.cususer_name as cususerNm	       
	from xm_customer_member xcm, xm_customer xc
	where xcm.customer_id = xc.customer_id
	and xc.customer_name =  #cusNm# -->
	</select>
		


	<resultMap class="customerNmBean" id="cusInfoMap2">
		<result property="cusId" column="customer_id"/>
		<result property="cusNm" column="customer_name"/>
	</resultMap>	
			
	<!-- 고객사 목록조회 용 콤보박스에서 사용 -->
	<select id="getcusNminfo2" resultMap="cusInfoMap2">
	SELECT customer_id, customer_name
	from xm_customer	
	order by customer_name asc;
	</select>
	
	<resultMap class="customerPjtNmBean" id="cusPjtInfoMap">
		<result property="cusId" column="customer_id"/>
		<result property="pjtId" column="project_id"/>
		<result property="pjtNm" column="project_name"/>
	</resultMap>
	
	<!-- 프로젝트 목록조회 용 콤보박스에서 사용 -->
	<select id="getcusPjtNminfo" resultMap="cusPjtInfoMap">
		select c.customer_id, p.project_id, p.project_name 
		from xm_customer c, xm_project p 
		where c.customer_id = p.customer_id
		order by c.customer_name, p.project_name asc
	</select>
	
	<update id="insertCusinfo1000" parameterClass="java.util.HashMap">
	 INSERT INTO XM_CUSTOMER  (customer_id, customer_name, customer_location, salesman_id, etc,
               				    create_user, create_date, last_update_user, last_update_date) 	 
	  				    VALUES(NEXTVAL('xm_customer_next_val'), #cusNm#, #cuslocation#,#salesmanId#, #etc#,	
	               			    #userId#, current_date::date, null,null)      			                 
	</update>
	
	
	<update id="insertCusinfo0100" parameterClass="java.util.HashMap">
	 INSERT INTO XM_PROJECT VALUES(NEXTVAL('xm_project_next_val'), 
	 										#cusproNm#,
	 										(SELECT CUSTOMER_ID FROM XM_CUSTOMER WHERE CUSTOMER_NAME = #cusNm#))		
	</update> 
	
	<update id="insertCusinfo0010" parameterClass="java.util.HashMap">
	INSERT INTO XM_PROJECT_DBMS_MANAGED VALUES(NEXTVAL('xm_project_dbms_next_val'),	 
											   (select project_id from xm_project where project_name = #cusproNm# and customer_id = (select customer_id from xm_customer where customer_name = #cusNm#)), 
											   #dbmsId#)				                 
	</update> 
	
	<update id="insertCusinfo0001" parameterClass="java.util.HashMap">
	INSERT INTO XM_CUSTOMER_MEMBER VALUES(NEXTVAL('xm_customer_member_next_val'),#cususerNm#, #cususerPhone#, #cususerMail#)
	</update> 
	
	<update id="insertCusinfo0001-1" parameterClass="java.util.HashMap">
	INSERT INTO xm_project_dbms_member_managed VALUES(NEXTVAL('xm_project_dbms_member_next_val'), 
													  (select project_id from xm_project where project_name = #cusproNm# and customer_id = (select customer_id from xm_customer where customer_name = #cusNm#)),
													   #dbmsId#,
													   (select cususer_id from xm_customer_member where cususer_name = #cususerNm#))
	</update> 
	
	<select id="getCusProCheck" parameterClass="java.util.HashMap" resultClass="customerPjtNmBean">
		select p.project_id as pjtId
		from xm_customer c, xm_project p 
		where c.customer_id = p.customer_id
		and c.customer_name = #cusNm#
		and p.project_name = #proNm#
	</select>	
		
	<select id="getprodbmsManagedcheck" parameterClass="java.util.HashMap" resultClass="customermemberBean">
		select a.customer_id as cusId,
		       a.project_id as proId,
		       xpdm.dbms_id as dbmsId
		from( select c.customer_id,
		             p.project_id 
			  from xm_customer c, xm_project p 
			  where c.customer_id = p.customer_id
			  and c.customer_name = #cusNm#
			  and p.project_name = #proNm#) a join xm_project_dbms_managed xpdm
		on a.project_id = xpdm.project_id
		where xpdm.dbms_id = #dbmsId#
	</select>
	
	<select id="getprodbmsmemberinfo" parameterClass="java.util.HashMap" resultClass="customermemberBean">
	select a.customer_id as cusId,
		   a.project_id as proId,
	       a.dbms_id as dbmsId,
		   a.cususer_id as cususerId,
	       xcm.cususer_name as cususerNm,
	       xcm.cususer_phone as cususerPhone,
	       xcm.cususer_mail as  cususerMail
	from (select a.customer_id,
		       a.project_id,
		       xpdm.dbms_id,
		       xpdm.cususer_id	        
		from (select xp.project_id,
			     xp.customer_id
		from xm_customer xc join xm_project xp
		on xc.customer_id = xp.customer_id
		where xc.customer_name = #cusNm#) a join xm_project_dbms_member_managed xpdm
		on a.project_id = xpdm.project_id ) a join xm_customer_member xcm 
	on a.cususer_id = xcm.cususer_id	
	where xcm.cususer_name = #cususerNm#
	</select>
</sqlMap>